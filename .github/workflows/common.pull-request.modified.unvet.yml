name: "Pull Request / Modified: Unvet"

on:
  workflow_run:
    workflows:
      - "Pull Request / Modified"
    types:
      - completed

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  check:
    name: "Maintainer Approval"
    runs-on: ubuntu-latest

    steps:
      # Dependabot. Success.
      - if: ${{ github.actor == 'dependabot[bot]' }}
        run: exit 0

      - if: ${{ ! contains(github.event.pull_request.labels.*.name, 'Vetted') }}
        run: exit 0

      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });

            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_details"
            })[0];

            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });

            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_details.zip`, Buffer.from(download.data));

      - name: 'Unzip artifact'
        run: unzip pr_details.zip

      # Doesn't have 'Vetted' label. Success.
      - uses: actions/github-script@v6
        with:
          script: |
            let fs = require('fs');
            let issue_number = Number(fs.readFileSync('./pr_number'));

            github.rest.issues.removeLabel({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: ["Vetted"]
            })
