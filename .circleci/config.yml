version: 2.1

commands:
  prepare:
    parameters:
      php-version:
        type: string

    steps:
      - run:
          name: Configure environment
          command: |
            apk update && apk add npm gcc autoconf make musl-dev oniguruma-dev gnupg

      - checkout

      - run:
          name: Configure environment
          command: |
            pecl install pcov
            docker-php-ext-install posix
            docker-php-ext-install pcntl
            docker-php-ext-install mbstring

            docker-php-ext-enable pcov posix pcntl mbstring

      - run:
          name: Install dependencies
          command: |
            npm install -g snyk

            EXPECTED_CHECKSUM="$(php -r 'copy("https://composer.github.io/installer.sig", "php://stdout");')"
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            ACTUAL_CHECKSUM="$(php -r "echo hash_file('sha384', 'composer-setup.php');")"

            if [ "$EXPECTED_CHECKSUM" != "$ACTUAL_CHECKSUM" ]; then
                >&2 echo 'ERROR: Invalid installer checksum'
                rm composer-setup.php
                exit 1
            fi

            php composer-setup.php --quiet
            RESULT=$?
            rm composer-setup.php

            php composer.phar install --no-interaction --prefer-dist

  run-phpinsights:
    steps:
      - run:
          name: Run code quality analysis (PHP Insights)
          command: php -d memory-limit=2G ./vendor/bin/phpinsights -v --no-interaction --min-quality=100 --min-complexity=50 --min-architecture=100 --min-style=100

  run-phpstan:
    steps:
      - run:
          name: Run static code analysis (PHPStan)
          command: php -d memory_limit=2G ./vendor/bin/phpstan analyse --ansi

  run-psalm:
    steps:
      - run:
          name: Run static code analysis (Psalm)
          command: php -d memory_limit=2G ./vendor/bin/psalm --threads=$(nproc)

  run-pest:
    steps:
      - run:
          name: Run unit tests (Pest)
          command: php -d memory_limit=2G ./vendor/bin/pest --stop-on-failure --min=100

  run-infection:
    steps:
      - run:
          name: Run mutation tests (Infection)
          command: php -d memory_limit=2G ./vendor/bin/infection --threads=$(nproc) --test-framework=pest --no-progress --only-covered --min-msi=48 --min-covered-msi=70

  run-snyk:
    steps:
      - run:
          name: Run vulnerabilities tests (Snyk)
          command: snyk test --org=auth0-sdks --project-name=auth0-PHP

jobs:
  test:
    parameters:
      php-version:
        type: string
    docker:
      - image: php:<< parameters.php-version >>-cli-alpine
    steps:
      - prepare:
          php: << parameters.php-version >>
      - run-phpinsights
      - run-phpstan
      - run-psalm
      - run-pest
  snyk:
    parameters:
      php-version:
        type: string
    docker:
      - image: php:<< parameters.php-version >>-cli-alpine
    steps:
      - prepare:
          php: << parameters.php-version >>
        - run-snyk
  infection:
    parameters:
      php-version:
        type: string
    docker:
      - image: php:<< parameters.php-version >>-cli-alpine
    steps:
      - prepare:
          php: << parameters.php-version >>
      - run-infection

workflows:
  run-tests:
    jobs:
      - test:
          matrix:
            parameters:
              php-version: ["7.4", "8.0", "8.1.0RC3"]
      - infection:
          matrix:
            parameters:
              php-version: ["7.4"]
      - snyk:
          matrix:
            parameters:
              php-version: ["7.4", "8.0"]
          context:
            - snyk-env
          filters:
            branches:
              only:
                - main
