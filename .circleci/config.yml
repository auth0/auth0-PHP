version: 2.1

commands:
  prepare:
    steps:
      - checkout
      - run:
          name: Setup Environment
          command: |
            apk update
            apk add gcc make autoconf musl-dev oniguruma-dev docker-cli
            pecl install pcov
            docker-php-ext-enable pcov
            docker-php-ext-install posix
            docker-php-ext-install pcntl
            docker-php-ext-install mbstring
      - run:
          name: Install Composer
          command: |
            systemctl start docker
            docker cp composer:/usr/bin/composer /usr/bin/composer
      - restore-cache
      - run:
          name: Install Dependencies
          command: |
            composer install --no-interaction --prefer-dist
            composer update --prefer-dist --no-interaction
      - save-cache

  save-cache:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - composer.*
            - .snyk
      - save_cache:
          key: composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
          paths:
            - vendor

  restore-cache:
    steps:
      - restore_cache:
          keys:
            - composer-v1-{{ .Environment.CIRCLE_JOB }}-{{ checksum "composer.json" }}
            - composer-v1-{{ .Environment.CIRCLE_JOB }}

  run-phpinsights:
    steps:
      - run:
          name: Run code quality analysis (PHP Insights)
          command: php ./vendor/bin/phpinsights -v --no-interaction --min-quality=90 --min-complexity=50 --min-architecture=90 --min-style=90

  run-phpstan:
    steps:
      - run:
          name: Run static code analysis (PHPStan)
          command: php ./vendor/bin/phpstan analyse --ansi --memory-limit 512M

  run-psalm:
    steps:
      - run:
          name: Run static code analysis (Psalm)
          command: php ./vendor/bin/psalm --threads=$(nproc)

  run-pest:
    steps:
      - run:
          name: Run unit tests (Pest)
          command: php ./vendor/bin/pest --stop-on-failure --min=80 --coverage-clover=build/coverage/coverage.xml --coverage-xml=build/coverage/coverage-xml --log-junit=build/coverage/junit.xml
      - persist_to_workspace:
          root: .
          paths:
            - src
            - tests
            - infection.json.dist
            - phpunit.xml.dist
            - build
            - vendor

  run-infection:
    steps:
      - run:
          name: Run mutation tests (Infection)
          command: php ./vendor/bin/infection --skip-initial-tests --threads=$(nproc) --test-framework=pest --coverage=build/coverage --no-progress --min-msi=48 --min-covered-msi=70

jobs:
  run-tests:
    parameters:
      php:
        type: string
    docker:
      - image: php:<< parameters.php >>-cli-alpine
    steps:
      - prepare
      - run-phpinsights
      - run-phpstan
      - run-psalm
      - run-pest

  run-security-tests:
    docker:
      - image: snyk/snyk-cli:composer
    steps:
      - attach_workspace:
          at: .
      - run: snyk test
      - run:
          command: |
            if [[ "${CIRCLE_BRANCH}" == "main" ]]
            then
            snyk monitor --org=auth0-sdks
            fi
          when: always

  run-mutation-tests:
    docker:
      - image: php:7.4-alpine
    steps:
      - attach_workspace:
          at: .
      - restore-cache
      - run-infection

workflows:
  run-tests:
    jobs:
      - run-tests:
          name: run-tests-7.4
          php: "7.4"
      - run-tests:
          name: run-tests-8.0
          php: "8.0"
      - run-tests:
          name: run-tests-8.1
          php: "8.1.0beta1"
      - run-security-tests:
          filters:
            branches:
              only:
                - main
          context: snyk-env
          requires: [run-tests-7.4]
      - run-mutation-tests:
          filters:
            branches:
              only:
                - main
          requires: [run-tests-7.4]
